// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: clients.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createClient = `-- name: CreateClient :one
INSERT INTO clients (name, balance)
VALUES ($1, $2)
RETURNING id, name, balance
`

type CreateClientParams struct {
	Name    string `json:"name"`
	Balance string `json:"balance"`
}

func (q *Queries) CreateClient(ctx context.Context, arg CreateClientParams) (Client, error) {
	row := q.db.QueryRowContext(ctx, createClient, arg.Name, arg.Balance)
	var i Client
	err := row.Scan(&i.ID, &i.Name, &i.Balance)
	return i, err
}

const getClient = `-- name: GetClient :one
SELECT id, name, balance FROM clients
WHERE id = $1
`

func (q *Queries) GetClient(ctx context.Context, id uuid.UUID) (Client, error) {
	row := q.db.QueryRowContext(ctx, getClient, id)
	var i Client
	err := row.Scan(&i.ID, &i.Name, &i.Balance)
	return i, err
}

const updateClientBalance = `-- name: UpdateClientBalance :exec
UPDATE clients
SET balance = $2
WHERE id = $1
`

type UpdateClientBalanceParams struct {
	ID      uuid.UUID `json:"id"`
	Balance string    `json:"balance"`
}

func (q *Queries) UpdateClientBalance(ctx context.Context, arg UpdateClientBalanceParams) error {
	_, err := q.db.ExecContext(ctx, updateClientBalance, arg.ID, arg.Balance)
	return err
}
